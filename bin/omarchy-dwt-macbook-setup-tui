#!/usr/bin/env bash
# Interactive TUI setup for trackpad disable-while-typing

set -euo pipefail

# Define logging functions
info() { echo -e "\033[34m[INFO]\033[0m $*"; }
success() { echo -e "\033[32m[SUCCESS]\033[0m $*"; }
warn() { echo -e "\033[33m[WARN]\033[0m $*"; }
error() { echo -e "\033[31m[ERROR]\033[0m $*"; }

# Configuration files
REAL_USER="${SUDO_USER:-$USER}"
REAL_HOME=$(getent passwd "$REAL_USER" | cut -d: -f6)
DWT_SCRIPT="$REAL_HOME/.local/share/omarchy/bin/omarchy-dwt-macbook-trackpad"
SUDOERS_FILE="/etc/sudoers.d/omarchy-trackpad-dwt"
INPUT_CONF="$REAL_HOME/.config/hypr/input.conf"

main() {
  clear
  echo "═══════════════════════════════════════════════════════════════"
  echo "   MacBook Trackpad Disable-While-Typing Setup"
  echo "═══════════════════════════════════════════════════════════════"
  echo ""

  # Step 1: Install dependencies
  info "Step 1: Checking dependencies..."
  install_dependencies

  # Step 2: Setup passwordless sudo
  info ""
  info "Step 2: Setting up passwordless sudo..."
  setup_sudo

  # Step 3: Select keyboard device
  info ""
  info "Step 3: Select your keyboard device"
  KEYBOARD_DEVICE=$(select_keyboard)

  # Step 4: Select trackpad device
  info ""
  info "Step 4: Select your trackpad device"
  TRACKPAD_DEVICE=$(select_trackpad)

  # Step 5: Choose timeout
  info ""
  info "Step 5: Choose timeout duration"
  TIMEOUT=$(select_timeout)

  # Step 6: Write configuration
  info ""
  info "Step 6: Writing configuration..."
  write_config "$KEYBOARD_DEVICE" "$TRACKPAD_DEVICE" "$TIMEOUT"

  # Final instructions
  echo ""
  echo "═══════════════════════════════════════════════════════════════"
  success "Setup complete!"
  echo "═══════════════════════════════════════════════════════════════"
  echo ""
  info "The following configuration has been added to your input.conf:"
  echo ""
  echo "  env = OMARCHY_TRACKPAD_DWT_KEYBOARD,$KEYBOARD_DEVICE"
  echo "  env = OMARCHY_TRACKPAD_DWT_TRACKPAD,$TRACKPAD_DEVICE"
  echo "  env = OMARCHY_TRACKPAD_DWT_TIMEOUT,$TIMEOUT"
  echo ""
  info "Next step: Restart Hyprland (Super+Esc, then Relaunch)"
  echo ""
  info "To remove this configuration later:"
  echo "  - Remove the env lines from ~/.config/hypr/input.conf"
  echo "  - Run: sudo rm /etc/sudoers.d/omarchy-trackpad-dwt"
  echo ""
}

install_dependencies() {
  local deps_needed=false

  if ! command -v evtest &>/dev/null; then
    deps_needed=true
    info "Installing evtest..."
    sudo pacman -S --noconfirm evtest || error "Failed to install evtest"
  fi

  if ! command -v socat &>/dev/null; then
    deps_needed=true
    info "Installing socat..."
    sudo pacman -S --noconfirm socat || error "Failed to install socat"
  fi

  if ! $deps_needed; then
    success "All dependencies are already installed"
  else
    success "Dependencies installed"
  fi
}

setup_sudo() {
  # Check if script exists
  if [ ! -f "$DWT_SCRIPT" ]; then
    error "Script not found: $DWT_SCRIPT"
    info "Please install Omarchy first"
    exit 1
  fi

  # Create sudoers rule
  USERNAME="${SUDO_USER:-$USER}"
  RULE="$USERNAME ALL=(ALL) NOPASSWD: $DWT_SCRIPT"

  # Create temporary file with proper permissions
  TEMP_FILE=$(mktemp)
  echo "$RULE" > "$TEMP_FILE"

  # Validate the sudoers syntax
  if ! visudo -c -f "$TEMP_FILE" &>/dev/null; then
    error "Invalid sudoers syntax"
    rm -f "$TEMP_FILE"
    exit 1
  fi

  # Install the sudoers file
  if sudo install -m 0440 "$TEMP_FILE" "$SUDOERS_FILE"; then
    success "Passwordless sudo configured"
  else
    error "Failed to install sudoers rule"
    rm -f "$TEMP_FILE"
    exit 1
  fi

  rm -f "$TEMP_FILE"
}

select_keyboard() {
  local keyboards=()
  local names=()

  # Find all keyboard devices
  for input_dev in /sys/class/input/input*; do
    if [ -r "$input_dev/name" ]; then
      device_name=$(cat "$input_dev/name")
      if echo "$device_name" | grep -qi "keyboard\|keyd" && \
         ! echo "$device_name" | grep -qi "mouse\|touchpad\|trackpad"; then
        for event_dev in "$input_dev"/event*; do
          if [ -e "$event_dev" ]; then
            event_path="/dev/input/$(basename "$event_dev")"
            keyboards+=("$event_path")
            names+=("$device_name")
            break
          fi
        done
      fi
    fi
  done

  if [ ${#keyboards[@]} -eq 0 ]; then
    error "No keyboard devices found!"
    exit 1
  elif [ ${#keyboards[@]} -eq 1 ]; then
    info "Found one keyboard: ${names[0]}"
    echo "${keyboards[0]}"
  else
    echo "Found multiple keyboards. Please select one:" >&2
    echo "" >&2
    PS3="Enter number: "
    select option in "${names[@]}"; do
      if [ -n "$option" ]; then
        local index=$((REPLY - 1))
        echo "${keyboards[$index]}"
        break
      fi
    done
  fi
}

select_trackpad() {
  local trackpads=()
  local names=()

  # Find all trackpad devices
  for input_dev in /sys/class/input/input*; do
    if [ -r "$input_dev/name" ]; then
      device_name=$(cat "$input_dev/name")
      if echo "$device_name" | grep -qi "trackpad\|touchpad"; then
        for event_dev in "$input_dev"/event*; do
          if [ -e "$event_dev" ]; then
            event_path="/dev/input/$(basename "$event_dev")"
            trackpads+=("$event_path")
            names+=("$device_name")
            break
          fi
        done
      fi
    fi
  done

  if [ ${#trackpads[@]} -eq 0 ]; then
    error "No trackpad devices found!"
    exit 1
  elif [ ${#trackpads[@]} -eq 1 ]; then
    info "Found one trackpad: ${names[0]}"
    echo "${trackpads[0]}"
  else
    echo "Found multiple trackpads. Please select one:" >&2
    echo "" >&2
    PS3="Enter number: "
    select option in "${names[@]}"; do
      if [ -n "$option" ]; then
        local index=$((REPLY - 1))
        echo "${trackpads[$index]}"
        break
      fi
    done
  fi
}

select_timeout() {
  echo "Select disable-while-typing timeout:" >&2
  echo "" >&2
  local options=("0.5 seconds (very short)" "1.0 seconds (short)" "1.5 seconds (default)" "2.0 seconds (long)" "3.0 seconds (very long)" "Custom")

  PS3="Enter number: "
  select option in "${options[@]}"; do
    case $REPLY in
      1) echo "0.5"; break ;;
      2) echo "1.0"; break ;;
      3) echo "1.5"; break ;;
      4) echo "2.0"; break ;;
      5) echo "3.0"; break ;;
      6)
        read -p "Enter custom timeout in seconds (e.g., 1.75): " custom
        if [[ "$custom" =~ ^[0-9]+\.?[0-9]*$ ]]; then
          echo "$custom"
          break
        else
          error "Invalid number, please try again"
        fi
        ;;
    esac
  done
}

write_config() {
  local keyboard="$1"
  local trackpad="$2"
  local timeout="$3"

  # Check if config already exists
  if grep -q "OMARCHY_TRACKPAD_DWT_KEYBOARD\|OMARCHY_TRACKPAD_DWT_TRACKPAD" "$INPUT_CONF" 2>/dev/null; then
    warn "Existing DWT configuration found in input.conf"
    read -p "Replace existing configuration? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      info "Keeping existing configuration"
      return
    fi

    # Remove existing config
    sed -i '/OMARCHY_TRACKPAD_DWT_/d' "$INPUT_CONF"
  fi

  # Add new configuration
  cat >> "$INPUT_CONF" << EOF

# MacBook trackpad disable-while-typing (configured by omarchy-dwt-macbook-setup-tui)
env = OMARCHY_TRACKPAD_DWT_KEYBOARD,$keyboard
env = OMARCHY_TRACKPAD_DWT_TRACKPAD,$trackpad
env = OMARCHY_TRACKPAD_DWT_TIMEOUT,$timeout
EOF

  success "Configuration written to input.conf"
}

# Show usage
if [ "${1:-}" = "--help" ] || [ "${1:-}" = "-h" ]; then
  cat << EOF
Usage: $(basename "$0")

Interactive setup for MacBook trackpad disable-while-typing feature.
This script will guide you through:
  1. Installing required dependencies
  2. Setting up passwordless sudo
  3. Selecting your keyboard and trackpad devices
  4. Choosing a timeout duration
  5. Writing the configuration

The script requires sudo access and will prompt when needed.
EOF
  exit 0
fi

# Check if we need sudo and re-run with it if necessary
if [ "$EUID" -ne 0 ]; then
  info "This script requires sudo access"
  info "Re-running with sudo..."
  exec sudo "$0" "$@"
fi

main "$@"
